# rails + mariadb環境スターターパック
# 環境変数定義は同階層に外部ファイル.envを追加し下記の値を追加してください。
# syntax
# - echo "RBENV_ROOT=/usr/local/rbenv">>.env
# - echo "MARIADB_PASS={{password_yourself}}">>.env
# - echo "WORKING_DIR=/var/www/myrails/{your_project}">>.env
#
# docker-composeコマンドは下記URLを参照のこと
# https://qiita.com/wasanx25/items/d47caf37b79e855af95f#exec
#
# docker-sync関連はこの記事を参考に構築
# https://qiita.com/Satoshi_Numasawa/items/278a143aa41735e1b0da
#
# memo:
# - ITの為にselemiumを追加したが現在動作未検証。
# - 2020.5.17 ActiveJob+Sidekiqでbackground-prosessを実行する為にkeyvaluedb:radisを追加。
# - 2020.5.19 sidekiqを別コンテナに切り出し、docker-sync利用で母艦ファイルの読み込み速度の向上を図る。
# - 2020.5.20 上述のdocker-syncでの母艦ディスクマウントを行う為にdocker-compose-dev.ymlを追加。
#   -> docker-sync.ymlがマウント設定を記載するファイルとなる。
# - 2021.1.04 master側でのコンテナ設定変更内容を、developにrebaseして動作確認。
# 注意事項
# - docker-syncを利用する構成を適用する場合、docker以外に母艦側アプリが必要となる。
#   -> 文書が長くなるので詳細はReadme.mdを参照。
# - railsのgemをvolume共有するためにbundle installコマンドは--pathオプションでvendor/bundle以下に保存要。
#
# Write a.otsuka lastupdate:2021.01.04
###
version: "3"
services:
  mariadb:
    image: mariadb:10.4
    container_name: mariadb
    env_file: .env
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: ${MARIADB_PASS}
    ports:
      - "3306:3306"
    networks:
      app_net:
        ipv4_address: 172.20.0.3
    volumes:
      - ./mariadb_data:/var/lib/mysql

  # Rails開発用の基底コンテナ->web開発用コンテナやsidekiqコンテナはこのbaseコンテナを継承。
  base: &base
    image: akihiro0028/autonomation-rails:version-v0.8
    env_file: .env
    environment:
      - RBENV_ROOT=${RBENV_ROOT}
      - MARIADB_PASS=${MARIADB_PASS}
      - NLS_LANG=japanese_japan.al32utf8
      - PATH=${RBENV_ROOT}/bin:${RBENV_ROOT}/shims/:${PATH}
      - SELENIUM_DRIVER_URL=http://172.20.0.5:4444/wd/hub
      - REDIS_URL=redis://172.20.0.6:6379
      - GMAIL_ACCOUNT=${GMAIL_ACCOUNT}
      - GMAIL_PASSWORD=${GMAIL_PASSWORD}

  # web開発用のrailsコンテナ
  rails: &rails
    <<: *base
    container_name: rails
    ports:
      - "3000:3000"
      - "3035:3035"
      - "4000:4000"
    networks:
      app_net:
        ipv4_address: 172.20.0.2
    tty: true
    depends_on:
      - mariadb

  # integration test用のseleniumコンテナ
  selenium:
    image: selenium/standalone-chrome-debug
    container_name: selenium
    logging:
      driver: none
    ports:
      - "4444:4444"
      - "5900:5900"
    depends_on:
      - rails
    networks:
      app_net:
        ipv4_address: 172.20.0.5

  # redis,要否判定の上適宜コメントアウト
  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    networks:
      app_net:
        ipv4_address: 172.20.0.6

  # sidekiq,要否判定の上、適宜コメントアウト
  sidekiq:
    <<: *base
    container_name: sidekiq
    working_dir: ${WORKING_DIR}
    # command: rsyslogd && bundle exec sidekiq 2>&1 | logger -t sidekiq
    command: bundle exec sidekiq
    ports:
      - "10001:10001"
    depends_on:
      - redis
    networks:
      app_net:
        ipv4_address: 172.20.0.7

  # oracle開発用コンテナ。要否判定の上、適宜コメントアウト
  oracle-xe:
    image: epiclabs/docker-oracle-xe-11g
    container_name: oracle
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      - TZ=Asia/Tokyo
      - LANGUAGE=ja_JP.ja
      - LANG=ja_JP.UTF-8
      - NLS_LANG=Japanese_Japan.AL32UTF8
      - ORACLE_ALLOW_REMOTE=true
    networks:
      app_net:
        ipv4_address: 172.20.0.4
    volumes:
      - ./oracle_data:/u01/app/oracle

# network設定セクション。
networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24

